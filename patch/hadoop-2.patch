Index: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/MapTask.java
===================================================================
--- hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/MapTask.java
+++ hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/MapTask.java
@@ -386,11 +395,19 @@
        ReflectionUtils.newInstance(
                         job.getClass(JobContext.MAP_OUTPUT_COLLECTOR_CLASS_ATTR,
                         MapOutputBuffer.class, MapOutputCollector.class), job);
-    LOG.info("Map output collector class = " + collector.getClass().getName());
     MapOutputCollector.Context context =
                            new MapOutputCollector.Context(this, job, reporter);
-    collector.init(context);
-    return collector;
+
+    try {
+      collector.init(context);
+    } catch (Exception e) {
+      LOG.warn("Nativetask falling back to Java MapOutputCollector", e);
+      collector = new MapOutputBuffer();
+      collector.init(context);
+    } finally {
+      LOG.info("Map output collector class = " + collector.getClass().getName());
+      return collector;
+    }
   }
 
   @SuppressWarnings("unchecked")
Index: hadoop-dist/pom.xml
===================================================================
--- hadoop-dist/pom.xml
+++ hadoop-dist/pom.xml
@@ -122,6 +122,7 @@
                       run cp -r $ROOT/hadoop-hdfs-project/hadoop-hdfs-nfs/target/hadoop-hdfs-nfs-${project.version}/* .
                       run cp -r $ROOT/hadoop-yarn-project/target/hadoop-yarn-project-${project.version}/* .
                       run cp -r $ROOT/hadoop-mapreduce-project/target/hadoop-mapreduce-${project.version}/* .
+                      run cp -r $ROOT/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/target/hadoop-mapreduce-client-nativetask-${project.version}/* .
                       run cp -r $ROOT/hadoop-tools/hadoop-tools-dist/target/hadoop-tools-dist-${project.version}/* .
                       echo
                       echo "Hadoop dist layout available at: ${project.build.directory}/hadoop-${project.version}"
Index: hadoop-mapreduce-project/hadoop-mapreduce-client/pom.xml
===================================================================
--- hadoop-mapreduce-project/hadoop-mapreduce-client/pom.xml
+++ hadoop-mapreduce-project/hadoop-mapreduce-client/pom.xml
@@ -195,5 +195,6 @@
     <module>hadoop-mapreduce-client-jobclient</module>
     <module>hadoop-mapreduce-client-hs</module>
     <module>hadoop-mapreduce-client-hs-plugins</module>
+    <module>hadoop-mapreduce-client-nativetask</module>
   </modules>
 </project>
Index: hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/Text.java
===================================================================
--- hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/Text.java
+++ hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/Text.java
@@ -226,6 +226,10 @@
     this.length = len;
   }
 
+  public void setLength(int len) {
+    this.length = len;
+  }
+
   /**
    * Append a range of bytes to the end of the given text
    * @param utf8 the data to copy from
@@ -260,7 +264,7 @@
    * @param len the number of bytes we need
    * @param keepData should the old data be kept
    */
-  private void setCapacity(int len, boolean keepData) {
+  public void setCapacity(int len, boolean keepData) {
     if (bytes == null || bytes.length < len) {
       if (bytes != null && keepData) {
         bytes = Arrays.copyOf(bytes, Math.max(len,length << 1));
